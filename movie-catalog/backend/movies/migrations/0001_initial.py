# Generated by Django 5.1.7 on 2025-04-20 20:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('year', models.IntegerField()),
                ('duration', models.CharField(help_text='Формат: 1h 30m', max_length=20)),
                ('genre', models.CharField(help_text='Жанры через запятую', max_length=100)),
                ('description', models.TextField()),
                ('director', models.CharField(max_length=100)),
                ('cast', models.TextField(help_text='Актеры через запятую')),
                ('imdb_rating', models.FloatField(blank=True, null=True)),
                ('poster_url', models.URLField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movie',
                'ordering': ['-year', 'title'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_movies', models.ManyToManyField(blank=True, related_name='favorited_by', to='movies.movie')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('watched_movies', models.ManyToManyField(blank=True, related_name='watched_by', to='movies.movie')),
            ],
        ),
    ]
